[{"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Book-details/Book-details.js":"1","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Profile/Profile.js":"2","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/books.service.js":"3","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/layout/Navigation/Navigation.js":"4","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/shared/Popup/Popup.js":"5","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/upload.service.js":"6","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/transation.service.js":"7","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Book-form/Book-form.js":"8"},{"size":12144,"mtime":1608047354491,"results":"9","hashOfConfig":"10"},{"size":5286,"mtime":1608077387626,"results":"11","hashOfConfig":"10"},{"size":777,"mtime":1608072091186,"results":"12","hashOfConfig":"10"},{"size":2694,"mtime":1608077575270,"results":"13","hashOfConfig":"10"},{"size":429,"mtime":1608035961506,"results":"14","hashOfConfig":"10"},{"size":308,"mtime":1607816699194,"results":"15","hashOfConfig":"10"},{"size":511,"mtime":1608072975354,"results":"16","hashOfConfig":"10"},{"size":5486,"mtime":1608076796994,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mc2bfa",{"filePath":"20","messages":"21","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Book-details/Book-details.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Profile/Profile.js",["35"],"import React, { Component } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\n\nimport TransationService from './../../../service/transation.service'\nimport BooksService from '../../../service/books.service'\n\nimport Alert from './../../shared/Alert/Alert'\n\nimport './Profile.css'\n\n\nclass Profile extends Component {\n\n    constructor(props) {\n\n        super(props)\n\n        this.state = {\n            transation: undefined,\n            book: {\n                owner: ''\n            },\n            transation_id: '',\n            book_owner_id: '',\n            book_buyer_select_id: '',\n            owner_id: this.props.user._id,\n            showToast: false,\n            toastText: ''\n        }\n        \n        this.transitionService = new TransationService()\n        this.booksService = new BooksService()\n    }\n\n\n    componentDidMount = () => this.refreshTransations()\n\n\n    refreshTransations = () => {\n\n        this.transitionService\n            .getTransations(this.props.user._id)\n            .then(res => {\n                res.data[0] && this.setState({ showToast: true, toastText: 'ATENCION. Tiene solicitudes de intercambio o venta pendientes.' })\n                this.setState({ transation: res.data })\n            })\n            .catch(err => this.setState({ showToast: true, toastText: err.response.data.message }))\n    }\n\n\n    handleSubmit = e => {\n    \n        e.preventDefault()\n        \n        const buyerId = this.state.book\n        const ownerId = this.state.owner_id\n\n        this.booksService\n            .editBookOwner(this.state.book_owner_id, buyerId) \n            .then(res => {\n                this.setState({ book: { owner: ownerId } })\n                this.changeOwnerIdInBookBuyer()\n            })\n            .catch(err => this.setState({ showToast: true, toastText: err.response.data.message }))\n    }\n\n\n    changeOwnerIdInBookBuyer = () => {\n\n        const ownerId = this.state.book\n\n        this.booksService\n            .editBookOwner(this.state.book_buyer_select_id, ownerId) \n            .then(res => this.closeTransation())\n            .catch(err => this.setState({ showToast: true, toastText: err.response.data.message }))\n    }\n\n\n    closeTransation = () => {\n\n        const transId = this.state.transation_id\n\n        this.transitionService\n            .closeTransation(transId)\n            .then(res => {\n                this.setState({ showToast: true, toastText: 'El intercambio se ha completado correctamente.' })\n                this.refreshTransations()\n            })\n            .catch(err => this.setState({ showToast: true, toastText: err.response.data.message }))\n    }\n\n\n    handleInputChange = (transactionId, bookOwnerId, buyerId, ownerId, e) => {\n   \n        this.setState({ book_buyer_select_id: e.target.value, transation_id: transactionId, book_owner_id: bookOwnerId, book: { owner: buyerId }, owner_id: ownerId })\n    }\n\n\n    handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })\n\n\n    render() {\n\n        return (\n            \n            <Container className=\"paddingTop70 perfil\">\n\n                <h1>¡Hola, {this.props.user.name} {this.props.user.lastname}!</h1>\n\n                <img src={this.props.user.img} alt={this.props.user.name} />\n            \n                <h3>Tus transacciones:</h3>\n\n                {this.state.transation\n                    ?\n                    <>\n                        {this.state.transation.map(elm => {\n                            return (\n                                <>\n                                    <p><em><strong>{elm.buyer.name}</strong></em> está interesad@ en intercambiar tu libro <em><strong>{elm.book_owner.title}</strong></em>, escoge un libro suyo que te interese para el intercambio:</p>\n\n\n                                    <Form onSubmit={this.handleSubmit}>\n                                \n                                        <Form.Group controlId=\"book_buyer_select_id\">\n                                            <Form.Label>Seleccionar libro</Form.Label>\n                                            <Form.Control type=\"text\" name=\"book_buyer_select_id\" value={this.state.buyer_book} onChange={(e) => this.handleInputChange(elm._id, elm.book_owner._id, elm.buyer._id, elm.owner._id, e)} as=\"select\" >\n                                                <option>Seleccione:</option>\n                                                {elm.book_buyer.map((element, idx) => <option key={idx} value={element._id}>{element.title}</option>)}\n                                            </Form.Control>\n                                        </Form.Group>\n                                            \n                                        <Button variant=\"#272643\" size=\"sm\" type=\"submit\">Intercambiar</Button>\n                                    \n                                    </Form>\n                                </>\n                            )\n                        })}\n                        \n                    </>\n                    :\n                    <p>error</p>\n                }\n\n                <Alert show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} />\n\n            </Container>\n\n        )\n\n    }\n    \n}\n\n\n\nexport default Profile\n","/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/books.service.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/layout/Navigation/Navigation.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/shared/Popup/Popup.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/upload.service.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/service/transation.service.js",[],"/Users/carlosmartinsalaslarena/Downloads/Ironhack/Proyecto3-TLibro/client/src/components/pages/Book-form/Book-form.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"36","line":96,"column":5},"Parsing error: Unexpected token, expected \",\"\n\n  94 |    \n  95 |         this.setState({ book_buyer_select_id: e.target.value, transation_id: transactionId, book_owner_id: bookOwnerId, book: { owner: buyerId }, owner_id: ownerId }\n> 96 |     }\n     |     ^\n  97 | \n  98 | \n  99 |     handleToast = (visible, text) => this.setState({ showToast: visible, toastText: text })"]